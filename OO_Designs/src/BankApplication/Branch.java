package BankApplication;

import java.util.List;
import java.util.Optional;
import java.util.logging.Logger;

public class Branch {

	private Logger logger = Logger.getLogger(Branch.class.getName());

	private List<BankAccount> bankAccounts;
	private List<Customer> customers;

	// Generated by head office
	private String branchId;

	// Account creation through factory method
	public BankAccount createBankAccount(String panNumber, String type, Double amount) throws BankAccountException {
		BankAccount newAccount;

		try {
			newAccount = AccountCreationFactory.getInstance(panNumber, type, amount);
		} catch (BankAccountException e) {
			// Re-throwing Account creation Exception
			throw new BankAccountException(logger, e.getMessage());
		}

		return newAccount;

	}

	/* Searches through the customers registered at this branch using streams */
	public Customer getCustomerByPanNumber(String panNumber) throws CustomerException {
		String errorMsg = "Customer with given pan " + panNumber + " not found in db.";

		Optional<Customer> customer = customers.parallelStream()
				.filter(e -> e.getPanNumber().equalsIgnoreCase(panNumber)).findFirst();

		// throw error that customer is not found
		customer.orElseThrow(() -> new CustomerException(logger, errorMsg));

		// else return the found customer
		return customer.get();
	}

	/* Searches through the bank accounts registered at this branch using streams */
	public BankAccount getAccountByAccountNumber(String accountNumber) throws BankAccountException {
		String errorMsg = "Bank Account with given acctNo: " + accountNumber + " not found in db.";

		Optional<BankAccount> account = bankAccounts.parallelStream()
				.filter(e -> e.getAccountNumber().equalsIgnoreCase(accountNumber)).findFirst();

		// throw error that account is not found
		account.orElseThrow(() -> new BankAccountException(logger, errorMsg));

		// else return the found account
		return account.get();
	}

	public String getBranchId() {
		return branchId;
	}
}
