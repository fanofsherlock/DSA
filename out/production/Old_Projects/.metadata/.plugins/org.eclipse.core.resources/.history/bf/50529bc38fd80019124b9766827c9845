package Collections;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.OptionalLong;
import java.util.stream.Stream;

public class Streams {

	public static void main(String[] args) {
		
		List<String> list = new ArrayList<String>();
		System.out.println(list.stream().anyMatch(s->s.length()>1));
		System.out.println(list.stream().allMatch(s->s.length()>1));
		System.out.println(list.stream().noneMatch(s->s.length()>1));
	
		Stream<Double> stream = Stream.generate(() -> Double.parseDouble("1.0"));
        System.out.println(stream.findFirst());
        
        Optional<Integer> optional = Optional.ofNullable(null);
        System.out.println(optional.orElse(-1));
        
        Stream<Integer> testStream = Stream.of(10,0,-10);
        System.out.println(testStream.findAny().get());
     
        
        Stream<LocalDate> stream2 = Stream.of(LocalDate.of(2018, 1, 1), LocalDate.of(2018, 1, 1));
        Optional<LocalDate> optional2 = stream2.distinct().findAny();
 
        System.out.println(optional2.isPresent() + " : " + optional2.get());
        
        OptionalLong optional3 = OptionalLong.empty();
        System.out.println(optional3.isPresent() + " : " + optional3.getAsLong());
	}
}
